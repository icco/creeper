<!doctype html>
<html>
  <head>
    <title>Creepermon</title>
    <link rel="stylesheet" href="https://npmcdn.com/tachyons@4.0.0-beta.12/css/tachyons.min.css">
    <link rel="icon" href="/favicon.ico">
    <!-- Load c3.css -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.css" rel="stylesheet" type="text/css">

    <!-- Load d3.js and c3.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/c3/0.4.10/c3.min.js"></script>
    <script src="https://d26b395fwzu5fz.cloudfront.net/3.4.0/keen.min.js"></script>
  </head>
  <body class="pa1 mw7">
    <h1>Creepermon</h1>

    <p>Creepermon is currently a site monitoring <a href="https://twitter.com/icco">@icco</a>'s web stuff. But, he is working on turning it into a library that anyone can use. You can check out the code <a href="https://github.com/icco/creepermon">on github</a>.

    <div id="alert"></div>

    <div id="graph"></div>

    <script>
      if (!Keen) {
        document.getElementById('alert').textContent="You are blocking Keen.io with some sort of Ad Blocker. Keen.io is our datasource, so we can't get data and show it to you.";
      }

      var client = new Keen({
        protocol: "https",
        requestType: "jsonp",
        projectId: "<%= @keen_project_id %>",
        readKey: "<%= @keen_read_key %>"
      });
      Keen.ready(function() {
        var query = new Keen.Query("average", {
          eventCollection: "scrape",
          filters: [
            {
              "operator": "eq",
              "property_name": "url",
              "property_value": "https://writing.natwelch.com/stats"
            }
          ],
          interval: "daily",
          targetProperty: "request_length",
          timeframe: "this_100_days",
          timezone: "UTC"
        });

        var chart = new Keen.Dataviz()
          .el(document.getElementById("graph"))
          .library("c3")
          .chartType("area")
          .chartOptions({
            x: {
              type: "timeseries",
              tick: {
                count: 6,
                format: "%Y-%m-%d"
              }
            },
            y: {
              label: "Average request time"
            },
          })
          .prepare();

        var req = client.run(query, function(err, res) {
          if (err) {
            // Display the API error
            console.log(err, res, req);
            chart.error(err.message);
          } else {
            chart.parseRequest(this).render();
          }
        });
      });
    </script>
  </body>
</html>
